// automatically generated from `stdlib.fc` `dns-code.fc` 
PROGRAM{
  99310 DECLMETHOD lnow
  DECLPROC load_data
  DECLPROC load_short_data
  DECLPROC store_data
  DECLPROC store_short_data
  DECLPROC send_message
  110403 DECLMETHOD get_payment_info
  67845 DECLMETHOD calc_cost
  -7 DECLMETHOD dnsresolve
  DECLPROC changerecord
  DECLPROC dnsregistrar
  DECLPROC recv_external
  DECLPROC recv_internal
  85143 DECLMETHOD seqno
  79053 DECLMETHOD getinfo
  lnow PROC:<{
    1570558743 PUSHINT
  }>
  load_data PROC:<{
    c4 PUSH
    CTOS
    32 LDU
    LDDICT
    256 LDU
    32 LDU
    6 LDU
    6 LDU
    6 LDU
    6 LDU
    DROP
  }>
  load_short_data PROC:<{
    c4 PUSH
    CTOS
    32 LDU
    LDDICT
  }>
  store_data PROC:<{
    NEWC
    s1 s8 XCHG
    32 STU
    s1 s6 XCHG
    STDICT
    s1 s4 XCHG
    256 STU
    s1 s2 XCHG
    32 STU
    6 STU
    6 STU
    6 STU
    6 STU
    ENDC
    c4 POP
  }>
  store_short_data PROC:<{
    NEWC
    s1 s3 XCHG
    32 STU
    STDICT
    SWAP
    STSLICER
    ENDC
    c4 POP
  }>
  send_message PROC:<{
    0 PUSHINT
    NEWC
    s9 s0 s8 XCHG3
    STUX
    s0 s5 XCHG2
    STSLICER
    s0 s4 XCHG2
    STGRAMS
    s1 s4 XCHG
    107 STU
    32 STU
    s1 s2 XCHG
    64 STU
    OVER
    SEMPTY
    IFNOT:<{
      SWAP
      STSLICER
    }>ELSE<{
      NIP
    }>
    ENDC
    SWAP
    SENDRAWMSG
  }>
  get_payment_info PROC:<{
    load_data CALLDICT
    s5 POP
    s5 POP
    s5 POP
    2 PUSHINT
    SWAP
    LSHIFT
    2 PUSHINT
    s0 s5 XCHG2
    LSHIFT
    2 PUSHINT
    s0 s4 XCHG2
    LSHIFT
    2 PUSHINT
    s0 s3 XCHG2
    LSHIFT
    s3 s3 s0 XCHG3
  }>
  calc_cost PROC:<{
    4 BLKDROP
    1000 PUSHINT
  }>
  dnsresolve PROC:<{
    load_short_data CALLDICT
    DROP
    NIP
    DUP
    ISNULL
    IFJMP:<{
      NIP
      NIP
      0 PUSHINT
      SWAP
    }>
    s2 PUSH
    SBITS
    s3 s3 XCHG2
    10 PUSHPOW2DEC
    PFXDICTGETQ
    NULLSWAPIFNOT
    NULLSWAPIFNOT
    IFJMP:<{
      SWAP
      32 LDU
      32 LDU
      NIP
      LDDICT
      DROP
      DUP
      ISNULL
      lnow CALLDICT
      s1 s3 XCHG
      LESS
      s1 s2 XCHG
      OR
      IFJMP:<{
        s0 s4 XCHG
        4 BLKDROP
        0 PUSHINT
        SWAP
      }>
      SWAP
      SEMPTY
      IFJMP:<{
        NIP
        OVER
        0 EQINT
        IFJMP:<{
          NIP
          SWAP
          3 RSHIFT#
          SWAP
        }>
        16 PUSHINT
        DICTIGETOPTREF
        SWAP
        3 RSHIFT#
        SWAP
      }>
      s2 POP
      s2 POP
      -1 PUSHINT
      SWAP
      16 PUSHINT
      DICTIGETOPTREF
      SWAP
      SBITS
      3 RSHIFT#
      SWAP
    }>
    5 BLKDROP
    0 PUSHINT
    NEWDICT
  }>
  changerecord PROC:<{
    load_short_data CALLDICT
    OVER
    ISNULL
    IFJMP:<{
      6 BLKDROP
    }>
    s0 s3 XCHG
    LDREF
    SWAP
    CTOS
    DUP
    SBITS
    s0 s2 XCHG
    LDDICT
    DROP
    OVER
    0 PUSHINT
    dnsresolve CALLDICT
    OVER
    3 LSHIFT#
    s1 s5 XCHG
    SUB
    s4 PUSH
    ISNULL
    IFJMP:<{
      10 BLKDROP
    }>
    IFJMP:<{
      s4 POP
      s4 POP
      s4 POP
      s4 POP
      s0 s3 XCHG
      CTOS
      32 LDI
      NIP
      8 LDI
      NIP
      256 LDSLICE
      DROP
      NEWC
      s0 s4 XCHG
      3 LSHIFT#
      s1 s3 XCHG
      SDSKIPFIRST
      s1 s3 XCHG
      STSLICER
      ENDC
      NEWC
      STREF
      s1 s2 XCHG
      STDICT
      ENDC
      50431 PUSHINT
      17 PUSHINT
      7497072 PUSHINT
      s0 s3 XCHG
      CTOS
      0 PUSHINT
      s3 s6 XCHG
      s2 s5 XCHG
      s2 s4 XCHG
      s2 s3 XCHG
      64 PUSHINT
      send_message CALLDICT
    }>
    DROP
    s7 POP
    SWAP
    CTOS
    32 LDU
    32 LDU
    LDDICT
    DROP
    DUP
    ISNULL
    s3 PUSH
    lnow CALLDICT
    LESS
    OR
    IFJMP:<{
      9 BLKDROP
    }>
    -2 PUSHINT
    SWAP
    16 PUSHINT
    DICTIGETOPTREF
    DUP
    ISNULL
    IFJMP:<{
      9 BLKDROP
    }>
    CTOS
    32 LDI
    NIP
    8 LDI
    NIP
    256 LDU
    DROP
    s0 s7 XCHG
    REWRITESTDADDR
    NIP
    s1 s7 XCHG
    EQUAL
    IFNOTJMP:<{
      7 BLKDROP
    }>
    NEWC
    32 STU
    s1 s5 XCHG
    32 STU
    s1 s5 XCHG
    STDICT
    ENDC
    CTOS
    s0 s3 s4 XCHG3
    10 PUSHPOW2DEC
    PFXDICTREPLACE
    DROP
    SWAP
    INC
    s0 s2 XCHG
    store_short_data CALLDICT
  }>
  dnsregistrar PROC:<{
    load_short_data CALLDICT
    OVER
    ISNULL
    IF:<{
      NIP
      NEWDICT
    }>ELSE<{
      SWAP
    }>
    s0 s3 XCHG
    LDREF
    SWAP
    CTOS
    DUP
    SDCNTTRAIL0
    8 LESSINT
    IFJMP:<{
      7 BLKDROP
    }>
    SWAP
    LDDICT
    OVER
    CTOS
    SBITREFS
    s0 s2 XCHG
    32 LDU
    32 LDU
    DROP
    2DUP
    s4 s5 XCHG2
    calc_cost CALLDICT
    s0 s8 XCHG2
    GREATER
    s7 PUSH
    lnow CALLDICT
    LESS
    OR
    OVER
    lnow CALLDICT
    LESS
    OR
    IFJMP:<{
      8 BLKDROP
    }>
    s2 PUSH
    0 PUSHINT
    dnsresolve CALLDICT
    DUP
    ISNULL
    0 NEQINT
    s2 s(-1) PUXC
    AND
    IFJMP:<{
      s5 POP
      s5 POP
      s5 POP
      s0 s2 XCHG
      CTOS
      32 LDI
      NIP
      8 LDI
      NIP
      256 LDSLICE
      DROP
      NEWC
      s0 s4 XCHG
      3 LSHIFT#
      s1 s2 XCHG
      SDSKIPFIRST
      s1 s3 XCHG
      STSLICER
      ENDC
      NEWC
      STREF
      STDICT
      s1 s3 XCHG
      32 STU
      32 STU
      ENDC
      50431 PUSHINT
      17 PUSHINT
      7497063 PUSHINT
      s0 s3 XCHG
      CTOS
      0 PUSHINT
      s3 s6 XCHG
      s2 s5 XCHG
      s2 s4 XCHG
      s2 s3 XCHG
      64 PUSHINT
      send_message CALLDICT
    }>
    2DROP
    s7 POP
    NEWC
    s1 s6 XCHG
    32 STU
    s1 s6 XCHG
    32 STU
    s1 s4 XCHG
    STDICT
    ENDC
    CTOS
    s4 s2 XCHG2
    10 PUSHPOW2DEC
    PFXDICTSET
    DROP
    s0 s2 XCHG
    INC
    -ROT
    store_short_data CALLDICT
  }>
  recv_external PROC:<{
    9 PUSHPOW2
    LDSLICEX
    DUP
    32 LDU
    load_short_data CALLDICT
    256 LDU
    s5 s3 XCPU
    EQUAL
    33 THROWIFNOT
    s0 s5 XCHG
    HASHSU
    s0 s6 s5 XCHG3
    CHKSIGNU
    34 THROWIFNOT
    ACCEPT
    DUP
    SREFS
    IF:<{
      8 LDU
      LDREF
      s0 s2 XCHG
      SENDRAWMSG
    }>
    ENDS
    SWAP
    INC
    -ROT
    store_short_data CALLDICT
  }>
  recv_internal PROC:<{
    SWAP
    CTOS
    4 LDU
    SWAP
    1 PUSHINT
    AND
    IFJMP:<{
      3 BLKDROP
    }>
    LDMSGADDR
    DROP
    OVER
    SEMPTY
    IFJMP:<{
      3 BLKDROP
    }>
    SWAP
    32 LDU
    OVER
    0 EQINT
    IFJMP:<{
      4 BLKDROP
    }>
    64 LDU
    s2 PUSH
    7497063 PUSHINT
    EQUAL
    IFJMP:<{
      s2 POP
      s2 POP
      s1 s2 XCHG
      dnsregistrar CALLDICT
    }>
    s4 POP
    OVER
    7497072 PUSHINT
    EQUAL
    IFJMP:<{
      NIP
      s0 s2 XCHG
      changerecord CALLDICT
    }>
    SWAP
    7497064 PUSHINT
    EQUAL
    IFJMP:<{
      s0 s2 XCHG
      16 LDI
      LDREF
      DROP
      CTOS
      s0 s1 PUSH2
      dnsresolve CALLDICT
      s2 PUSH
      SBITS
      s2 PUSH
      3 LSHIFT#
      SUB
      OVER
      ISNULL
      0 NEQINT
      AND
      IF:<{
        DUP
        CTOS
        32 LDI
        NIP
        8 LDI
        NIP
        256 LDSLICE
        DROP
        NEWC
        s3 PUSH
        3 LSHIFT#
        s1 s5 XCHG
        SDSKIPFIRST
        s1 s4 XCHG
        STSLICER
        ENDC
        NEWC
        STREF
        s1 s4 XCHG
        16 STI
        ENDC
        50431 PUSHINT
        17 PUSHINT
        7497064 PUSHINT
        lnow CALLDICT
        s0 s4 XCHG
        CTOS
        30 PUSHPOW2
        s4 s6 XCHG
        s3 s5 XCHG
        s4 s7 XCHG
        s2 s3 XCHG
        0 PUSHINT
        send_message CALLDICT
      }>ELSE<{
        s2 s3 XCHG2
        2DROP
      }>
      NEWC
      32 STU
      STREF
      ENDC
      24 PUSHINT
      6 PUSHINT
      7497065 PUSHINT
      s0 s3 XCHG
      CTOS
      0 PUSHINT
      s3 s6 XCHG
      s2 s5 XCHG
      s2 s4 XCHG
      s2 s3 XCHG
      64 PUSHINT
      send_message CALLDICT
    }>
    3 BLKDROP
  }>
  seqno PROC:<{
    c4 PUSH
    CTOS
    32 PLDU
  }>
  getinfo PROC:<{
    load_data CALLDICT
  }>
}END>c
