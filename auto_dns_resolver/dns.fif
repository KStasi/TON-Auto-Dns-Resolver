// automatically generated from `stdlib.fc` `dns-code.fc` 
PROGRAM{
  99310 DECLMETHOD lnow
  DECLPROC load_data
  DECLPROC load_short_data
  DECLPROC store_data
  DECLPROC store_short_data
  DECLPROC send_message
  84671 DECLMETHOD getpayment
  67845 DECLMETHOD calc_cost
  -7 DECLMETHOD dnsresolve
  DECLPROC changerecord
  DECLPROC dnsregistrar
  DECLPROC recv_external
  DECLPROC recv_internal
  85143 DECLMETHOD seqno
  84387 DECLMETHOD getexpirationtime
  lnow PROC:<{
    1570558743 PUSHINT
  }>
  load_data PROC:<{
    c4 PUSH
    CTOS
    32 LDU
    LDDICT
    256 LDU
    32 LDU
    6 LDU
    6 LDU
    6 LDU
    6 LDU
    6 LDU
    DROP
  }>
  load_short_data PROC:<{
    c4 PUSH
    CTOS
    32 LDU
    LDDICT
  }>
  store_data PROC:<{
    NEWC
    s1 s9 XCHG
    32 STU
    s1 s7 XCHG
    STDICT
    s1 s5 XCHG
    256 STU
    s1 s3 XCHG
    32 STU
    6 STU
    6 STU
    6 STU
    6 STU
    6 STU
    ENDC
    c4 POP
  }>
  store_short_data PROC:<{
    NEWC
    s1 s3 XCHG
    32 STU
    STDICT
    SWAP
    STSLICER
    ENDC
    c4 POP
  }>
  send_message PROC:<{
    0 PUSHINT
    NEWC
    s9 s0 s8 XCHG3
    STUX
    s0 s5 XCHG2
    STSLICER
    s0 s4 XCHG2
    STGRAMS
    s1 s4 XCHG
    107 STU
    32 STU
    s1 s2 XCHG
    64 STU
    OVER
    SEMPTY
    IFNOT:<{
      SWAP
      STSLICER
    }>ELSE<{
      NIP
    }>
    ENDC
    SWAP
    SENDRAWMSG
  }>
  getpayment PROC:<{
    load_data CALLDICT
    s6 POP
    s6 POP
    s6 POP
    2 PUSHINT
    ROT
    LSHIFT
    2 PUSHINT
    ROT
    LSHIFT
    2 PUSHINT
    s0 s6 XCHG2
    LSHIFT
    2 PUSHINT
    s0 s5 XCHG2
    LSHIFT
    2 PUSHINT
    s0 s4 XCHG2
    LSHIFT
    s5 s4 s0 XCHG3
    s1 s3 s0 XCHG3
  }>
  calc_cost PROC:<{
    s2 POP
    getpayment CALLDICT
    s3 POP
    s4 POP
    s1 s6 XCHG
    MUL
    ADD
    -ROT
    MUL
    ADD
    s0 s2 XCHG
    MUL
    ADD
  }>
  dnsresolve PROC:<{
    load_short_data CALLDICT
    DROP
    NIP
    DUP
    ISNULL
    IFJMP:<{
      NIP
      NIP
      0 PUSHINT
      SWAP
    }>
    NEWC
    s0 s3 XCHG2
    STSLICER
    8 PUSHINT
    STZEROES
    ENDC
    CTOS
    10 PUSHPOW2DEC
    s1 s3 s3 PUXC2
    PFXDICTGETQ
    NULLSWAPIFNOT
    NULLSWAPIFNOT
    IFJMP:<{
      SWAP
      LDDICT
      DROP
      DUP
      ISNULL
      IFJMP:<{
        s0 s4 XCHG
        4 BLKDROP
        0 PUSHINT
        SWAP
      }>
      SWAP
      SEMPTY
      IFJMP:<{
        NIP
        s0 s2 XCHG
        SBITS
        OVER
        0 EQINT
        IFJMP:<{
          NIP
          3 RSHIFT#
          SWAP
        }>
        s0 s2 XCHG
        16 PUSHINT
        DICTIGETOPTREF
        SWAP
        3 RSHIFT#
        SWAP
      }>
      s2 POP
      s2 POP
      -1 PUSHINT
      SWAP
      16 PUSHINT
      DICTIGETOPTREF
      DUP
      ISNULL
      IFJMP:<{
        NIP
        0 PUSHINT
        SWAP
      }>
      SWAP
      SBITS
      3 RSHIFT#
      SWAP
    }>
    5 BLKDROP
    0 PUSHINT
    NEWDICT
  }>
  changerecord PROC:<{
    load_data CALLDICT
    s7 PUSH
    ISNULL
    95 THROWIF
    s0 s9 XCHG
    LDREF
    SWAP
    CTOS
    DUP
    SBITS
    8 ADDCONST
    s0 s2 XCHG
    1 LDU
    s2 PUSH
    0 PUSHINT
    dnsresolve CALLDICT
    OVER
    3 LSHIFT#
    s1 s6 XCHG
    SUB
    s5 PUSH
    ISNULL
    95 THROWIF
    IFJMP:<{
      s5 POP
      s5 POP
      s5 POP
      s5 POP
      s5 POP
      s5 POP
      s5 POP
      s5 POP
      s5 POP
      s5 POP
      s5 POP
      s0 s3 XCHG
      CTOS
      8 LDI
      NIP
      256 PLDSLICE
      NEWC
      s0 s5 XCHG
      3 LSHIFT#
      s1 s3 XCHG
      SDSKIPFIRST
      s1 s4 XCHG
      STSLICER
      ENDC
      NEWC
      STREF
      s3 s(-1) PUXC
      1 STU
      s0 s3 XCHG
      IF:<{
        SWAP
        32 LDU
        DROP
        ROT
        32 STU
      }>ELSE<{
        SWAP
        LDDICT
        DROP
        ROT
        STDICT
      }>
      50431 PUSHINT
      17 PUSHINT
      7497072 PUSHINT
      s0 s3 XCHG
      ENDC
      CTOS
      0 PUSHINT
      s3 s6 XCHG
      s2 s5 XCHG
      s2 s4 XCHG
      s2 s3 XCHG
      64 PUSHINT
      send_message CALLDICT
    }>
    DROP
    s15 POP
    -2 PUSHINT
    s3 PUSH
    16 PUSHINT
    DICTIGETOPTREF
    DUP
    ISNULL
    96 THROWIF
    CTOS
    8 LDI
    NIP
    256 PLDU
    s0 s13 XCHG
    REWRITESTDADDR
    NIP
    s1 s13 XCHG
    EQUAL
    94 THROWIFNOT
    s0 s11 XCHG
    IF:<{
      s0 s12 XCHG
      32 PLDU
      s0 s2 PUSH2
      MUL
      2 ADDCONST
      s4 PUSH
      LSHIFT
      s0 s12 XCHG2
      LESS
      90 THROWIFNOT
      0 PUSHINT
      s12 PUSH
      16 PUSHINT
      DICTIGETOPTREF
      DUP
      ISNULL
      91 THROWIF
      CTOS
      32 LDU
      32 PLDU
      s0 s12 XCHG
      ADD
      NEWC
      32 STU
      s1 s11 XCHG
      32 STU
      ENDC
      0 PUSHINT
      s1 s0 s12 XCHG3
      16 PUSHINT
      DICTISETREF
      NEWC
      STDICT
      ENDC
      CTOS
      NEWC
      s0 s9 XCHG2
      STSLICER
      8 PUSHINT
      STZEROES
      ENDC
      CTOS
      s8 s0 s5 XCHG3
      10 PUSHPOW2DEC
      PFXDICTREPLACE
      DROP
    }>ELSE<{
      s0 s12 XCHG
      PLDDICT
      DUP
      CTOS
      SBITREFS
      s14 PUSH
      CTOS
      SBITREFS
      s3 s3 XCHG2
      SUB
      s4 PUSH
      MUL
      s0 s2 XCHG
      SUB
      s11 PUSH
      MUL
      ADD
      2 ADDCONST
      s4 PUSH
      LSHIFT
      s0 s12 XCHG2
      LESS
      90 THROWIFNOT
      0 PUSHINT
      s0 s12 XCHG2
      16 PUSHINT
      DICTIGETOPTREF
      DUP
      ISNULL
      91 THROWIF
      0 PUSHINT
      s1 s0 s11 XCHG3
      16 PUSHINT
      DICTISETREF
      NEWC
      STDICT
      ENDC
      CTOS
      NEWC
      s0 s9 XCHG2
      STSLICER
      8 PUSHINT
      STZEROES
      ENDC
      CTOS
      s8 s0 s5 XCHG3
      10 PUSHPOW2DEC
      PFXDICTREPLACE
      DROP
      s7 s8 XCHG
    }>
    s0 s4 XCHG
    INC
    s0 s8 XCHG
    s4 s7 XCHG
    s6 s5 s0 XCHG3
    s0 s4 s4 XCHG3
    store_data CALLDICT
  }>
  dnsregistrar PROC:<{
    load_data CALLDICT
    s0 s9 XCHG
    LDREF
    SWAP
    CTOS
    DUP
    SBITS
    8 ADDCONST
    s0 s2 XCHG
    LDDICT
    32 LDU
    32 PLDU
    s3 PUSH
    0 PUSHINT
    dnsresolve CALLDICT
    s0 s6 XCHG
    3 RSHIFT#
    OVER
    SUB
    s1 s(-1) PUXC
    AND
    IFJMP:<{
      s6 POP
      s6 POP
      s6 POP
      s6 POP
      s6 POP
      s6 POP
      s6 POP
      s6 POP
      s6 POP
      s6 POP
      OVER
      ISNULL
      97 THROWIF
      SWAP
      CTOS
      8 LDI
      NIP
      256 LDSLICE
      DROP
      NEWC
      s0 s3 XCHG
      3 LSHIFT#
      s1 s2 XCHG
      SDSKIPFIRST
      s1 s2 XCHG
      STSLICER
      ENDC
      NEWC
      STREF
      s1 s4 XCHG
      STDICT
      s1 s2 XCHG
      32 STU
      32 STU
      ENDC
      50431 PUSHINT
      17 PUSHINT
      7497063 PUSHINT
      s0 s3 XCHG
      CTOS
      0 PUSHINT
      s3 s6 XCHG
      s2 s5 XCHG
      s2 s4 XCHG
      s2 s3 XCHG
      64 PUSHINT
      send_message CALLDICT
    }>
    DROP
    s15 POP
    s3 PUSH
    ISNULL
    IFNOT:<{
      0 PUSHINT
      s0 s4 XCHG2
      16 PUSHINT
      DICTIGETOPTREF
      DUP
      ISNULL
      IFNOT:<{
        CTOS
        32 PLDU
        NOW
        GREATER
        97 THROWIF
      }>ELSE<{
        DROP
      }>
    }>ELSE<{
      s3 POP
    }>
    DUP
    CTOS
    SBITREFS
    s4 s(-1) s0 PUXC2
    16 s() PUSH
    s0 s2 XCHG
    calc_cost CALLDICT
    s0 s13 XCHG2
    LESS
    90 THROWIFNOT
    s6 s1 PUXC
    ADD
    NEWC
    32 STU
    s1 s12 XCHG
    32 STU
    ENDC
    0 PUSHINT
    s1 s0 s11 XCHG3
    16 PUSHINT
    DICTISETREF
    NEWC
    STDICT
    ENDC
    CTOS
    NEWC
    s0 s11 XCHG2
    STSLICER
    8 PUSHINT
    STZEROES
    ENDC
    CTOS
    s10 s0 s6 XCHG3
    10 PUSHPOW2DEC
    PFXDICTSET
    DROP
    s0 s5 XCHG
    INC
    s0 s8 XCHG
    s5 s7 XCHG
    s3 s6 XCHG
    3 3 BLKSWAP
    s1 s2 XCHG
    store_data CALLDICT
  }>
  recv_external PROC:<{
    9 PUSHPOW2
    LDSLICEX
    DUP
    32 LDU
    load_short_data CALLDICT
    DUP
    256 PLDU
    s5 s3 XCPU
    EQUAL
    33 THROWIFNOT
    s0 s5 XCHG
    HASHSU
    s0 s6 s4 XCHG3
    CHKSIGNU
    34 THROWIFNOT
    ACCEPT
    DUP
    SREFS
    IF:<{
      8 LDU
      LDREF
      s0 s2 XCHG
      SENDRAWMSG
    }>
    ENDS
    INC
    -ROT
    store_short_data CALLDICT
  }>
  recv_internal PROC:<{
    SWAP
    CTOS
    4 LDU
    SWAP
    1 PUSHINT
    AND
    IFJMP:<{
      3 BLKDROP
    }>
    LDMSGADDR
    DROP
    OVER
    SEMPTY
    IFJMP:<{
      3 BLKDROP
    }>
    SWAP
    32 LDU
    OVER
    0 EQINT
    IFJMP:<{
      4 BLKDROP
    }>
    64 LDU
    s2 PUSH
    7497063 PUSHINT
    EQUAL
    IFJMP:<{
      s2 POP
      s2 POP
      s1 s2 XCHG
      dnsregistrar CALLDICT
    }>
    s2 PUSH
    7497072 PUSHINT
    EQUAL
    IFJMP:<{
      s2 POP
      3 -ROLL
      changerecord CALLDICT
    }>
    s3 POP
    s3 POP
    7497064 PUSHINT
    EQUAL
    IF:<{
      16 LDI
      LDREF
      DROP
      CTOS
      s0 s1 PUSH2
      dnsresolve CALLDICT
      s2 PUSH
      SBITS
      s2 PUSH
      3 LSHIFT#
      SUB
      OVER
      ISNULL
      0 EQINT
      AND
      IF:<{
        DUP
        CTOS
        32 LDI
        NIP
        8 LDI
        NIP
        256 LDSLICE
        DROP
        NEWC
        s3 PUSH
        3 LSHIFT#
        s1 s5 XCHG
        SDSKIPFIRST
        s1 s4 XCHG
        STSLICER
        ENDC
        NEWC
        STREF
        s1 s4 XCHG
        16 STI
        ENDC
        50431 PUSHINT
        17 PUSHINT
        7497064 PUSHINT
        s0 s3 XCHG
        CTOS
        30 PUSHPOW2
        s3 s5 XCHG
        s2 s4 XCHG
        s3 s6 XCHG
        s8 s(-1) s(-1) PUXC2
        0 PUSHINT
        send_message CALLDICT
      }>ELSE<{
        s2 s3 XCHG2
        2DROP
      }>
      NEWC
      32 STU
      STREF
      ENDC
      0 PUSHINT
      48 PUSHINT
      NEWC
      6 STU
      98 STU
      s1 s2 XCHG
      64 STU
      SWAP
      CTOS
      STSLICER
      ENDC
      3 PUSHINT
      SENDRAWMSG
    }>ELSE<{
      2DROP
    }>
  }>
  seqno PROC:<{
    c4 PUSH
    CTOS
    32 PLDU
  }>
  getexpirationtime PROC:<{
    DUP
    0 PUSHINT
    dnsresolve CALLDICT
    s0 s2 XCHG
    SBITS
    8 ADDCONST
    3 RSHIFT#
    SWAP
    EQUAL
    IFJMP:<{
      0 PUSHINT
      SWAP
      16 PUSHINT
      DICTIGETOPTREF
      DUP
      ISNULL
      IFJMP:<{
        DROP
        -1 PUSHINT
      }>
      CTOS
      32 PLDU
    }>
    DROP
    -1 PUSHINT
  }>
}END>c
